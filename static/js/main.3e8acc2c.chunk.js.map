{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["today","Date","toUTCString","slice","Clock","state","currentTime","clockTimer","timerId","window","setInterval","setState","console","info","this","clearInterval","className","props","clockName","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","_prevProps","prevState","debug","ReactDOM","render","getElementById"],"mappings":"sNAYMA,GAAQ,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAEtCC,EAAb,4MACEC,MAAe,CACbC,YAAaN,EACbO,WAAY,GAHhB,uDAME,WAA2B,IAAD,OAClBC,EAAUC,OAAOC,aAAY,WACjC,EAAKC,SAAS,CACZL,aAAa,IAAIL,MAAOC,cAAcC,OAAO,IAAK,KAEpDS,QAAQC,KAAK,EAAKR,MAAMC,eACvB,KAEHQ,KAAKH,SAAS,CACZJ,WAAYC,MAflB,kCAmBE,WACEC,OAAOM,cAAcD,KAAKT,MAAME,cApBpC,oBAuBE,WACE,OACE,sBAAKS,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,KAAKG,MAAMC,YAGb,YAED,sBAAMF,UAAU,cAAhB,SACGF,KAAKT,MAAMC,qBAjCtB,GAA2Ba,IAAMC,WCJjC,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWrB,OAAO,GAE3C,MAAM,SAAN,OAAgBmB,GAGX,IAAMG,EAAb,4MACEpB,MAAe,CACba,UAAW,UACXQ,UAAU,GAHd,uDAME,WAA2B,IAAD,OACxBjB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CACZO,UAAWG,QAEZ,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEF,EAAKzB,MAAMqB,UACb,EAAKf,SAAS,CACZe,UAAU,OAKhBC,SAASC,iBAAiB,SAAS,WAC5B,EAAKvB,MAAMqB,UACd,EAAKf,SAAS,CACZe,UAAU,SA1BpB,gCAgCE,SACEK,EAA0BC,GAEtBlB,KAAKT,MAAMqB,UACbd,QAAQqB,MAAR,uBAA8BD,EAAUd,UAAxC,eAAwDJ,KAAKT,MAAMa,cApCzE,kCAwCE,WAA8B,IAAD,OAC3BT,OAAOM,cAAcN,OAAOC,aAAY,WACtC,EAAKC,SAAS,CACZO,UAAWG,YA3CnB,oBAgDE,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,6CACCF,KAAKT,MAAMqB,SACR,cAAC,EAAD,CAAOR,UAAWJ,KAAKT,MAAMa,YAC7B,YAtDZ,GAAyBC,IAAMC,WCb/Bc,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.3e8acc2c.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ninterface State {\n  currentTime: string;\n  clockTimer: number;\n}\n\ninterface Props {\n  clockName: string;\n}\n\nconst today = new Date().toUTCString().slice(-12, -4);\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    currentTime: today,\n    clockTimer: 0,\n  };\n\n  componentDidMount(): void {\n    const timerId = window.setInterval(() => {\n      this.setState({\n        currentTime: new Date().toUTCString().slice(-12, -4),\n      });\n      console.info(this.state.currentTime);\n    }, 1000);\n\n    this.setState({\n      clockTimer: timerId,\n    });\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.state.clockTimer);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ninterface State {\n  clockName: string;\n  hasClock: boolean;\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount(): void {\n    window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault(); // not to show the context menu\n\n      if (this.state.hasClock) {\n        this.setState({\n          hasClock: false,\n        });\n      }\n    });\n\n    document.addEventListener('click', () => {\n      if (!this.state.hasClock) {\n        this.setState({\n          hasClock: true,\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(\n    _prevProps: Readonly<{}>, prevState: Readonly<State>,\n  ): void {\n    if (this.state.hasClock) {\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock\n          ? <Clock clockName={this.state.clockName} />\n          : null}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}