{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","toUTCString","slice","timerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAe,CACbC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFtD,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZR,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAEpDM,QAAQC,KAAK,EAAKX,MAAMC,eACvB,OAbP,gCAgBE,SAAmBW,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WACrCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cAlBzE,kCAsBE,WACEN,OAAOS,cAAcV,KAAKD,WAvB9B,oBA0BE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKQ,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGX,KAAKN,MAAMC,qBApCtB,GAA2BiB,IAAMC,WCDjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWnB,OAAO,GAE3C,MAAM,SAAN,OAAgBiB,GAGX,IAAMG,EAAb,4MACExB,MAAe,CACba,UAAW,UACXY,UAAU,GAHd,EAMEpB,QAAU,EANZ,uDAQE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZI,UAAWO,QAEZ,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKpB,SAAS,CACZgB,UAAU,OAIdC,SAASC,iBAAiB,SAAS,WACjC,EAAKlB,SAAS,CACZgB,UAAU,SAzBlB,kCAsCE,WACElB,OAAOS,cAAcV,KAAKD,WAvC9B,oBA0CE,WACE,OACE,sBAAKY,UAAU,MAAf,UACE,6CACCX,KAAKN,MAAMyB,UAAY,cAAC,EAAD,CAAOZ,UAAWP,KAAKN,MAAMa,mBA9C7D,GAAyBK,IAAMC,WCb/BW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.43435deb.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ninterface State {\n  currentTime: string;\n}\n\ninterface Props {\n  clockName: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        currentTime: new Date().toUTCString().slice(-12, -4),\n      });\n      console.info(this.state.currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ninterface State {\n  clockName: string;\n  hasClock: boolean;\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault(); // not to show the context menu\n\n      this.setState({\n        hasClock: false,\n      });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n      });\n    });\n  }\n\n  // componentDidUpdate(\n  //   _prevProps: Readonly<{}>, prevState: Readonly<State>,\n  // ): void {\n  //   if (this.state.hasClock) {\n  //     console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n  //   }\n  // }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}